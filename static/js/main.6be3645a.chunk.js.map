{"version":3,"sources":["logo.svg","ItemisAddress.js","Column.js","Table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","icon_cancel","className","width","height","viewBox","fill","xmlns","fill-rule","d","icon_submit","ItemisAddress","props","useState","address","street","streetInput","setstreetInput","suite","suiteInput","setsuiteInput","city","cityInput","setcityInput","zipcode","zipInput","setzipInput","type","value","onChange","e","target","onClick","console","log","change_item","id","taskReset","icon_edit","Column","isEditValueOn","setIsEditValueOn","item_value","itemInput","setItemInput","item_key","preventDefault","el","Table","Object","keys","users","map","scope","name","username","email","phone","website","company","App","setUsers","fetch","then","response","json","href","newInput","index","i","newlist","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6be3645a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState} from 'react';\n\nconst icon_cancel = (<svg className=\"bi bi-x-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                          xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n    <path fill-rule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n    </svg>);\nconst icon_edit = (<svg className=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n</svg>);\n\nconst icon_submit = (\n    <svg className=\"bi bi-check-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n        <path fill-rule=\"evenodd\"\n              d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n    </svg>);\n\nfunction ItemisAddress(props) {\n    const [streetInput, setstreetInput] = useState(props.address.street);\n    const [suiteInput, setsuiteInput] = useState(props.address.suite);\n    const [cityInput, setcityInput] = useState(props.address.city);\n    const [zipInput, setzipInput] = useState(props.address.zipcode);\n\n    const onStreetChange = (e) => {\n        setstreetInput(e.target.value);\n    };\n    const onSuiteChange = (e) => {\n        setsuiteInput(e.target.value);\n    };\n    const onCityChange = (e) => {\n        setcityInput(e.target.value);\n    };\n    const onZipChange = (e) => {\n        setzipInput(e.target.value);\n    };\n\n    const taskSubmit = () => {\n        console.log(\"Address\");\n\n        props.change_item(props.id,\"address\",streetInput,suiteInput,cityInput,zipInput);\n        props.taskReset();\n    };\n\n    return (\n\n            <form className=\"addnewitem_style\">\n                <span className=\"form-group\">\n                    <input type=\"text\" className=\"form-control\"\n                           value={streetInput} onChange={onStreetChange}/>\n                    <input type=\"text\" className=\"form-control\"\n                            value={suiteInput} onChange={onSuiteChange}/>\n                    <input type=\"text\" className=\"form-control\"\n                            value={cityInput} onChange={onCityChange}/>\n                    <input type=\"text\" className=\"form-control\"\n                            value={zipInput} onChange={onZipChange}/>\n                </span>\n\n                <span  className=\"btn-outline-info \"\n                       onClick={taskSubmit}>{icon_submit}\n                </span>\n                <span  className=\"stepahead btn-outline-info\"\n                       onClick={props.taskReset}>{icon_cancel}\n                </span>\n            </form>\n          /*  item_value={el.address[\"street\"]+\" \"+ el.address[\"suite\"]+\" \"+el.address[\"city\"]+\" \"+el.address[\"zipcode\"]\n       */\n\n    );\n}\n\nexport default ItemisAddress;","import React, {useState} from 'react';\nimport ItemisAddress from \"./ItemisAddress\";\n\nconst icon_cancel = (<svg className=\"bi bi-x-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                          xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fill-rule=\"evenodd\" d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"/>\n    <path fill-rule=\"evenodd\" d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"/>\n    </svg>);\nconst icon_edit = (<svg className=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n</svg>);\n\nconst icon_submit = (\n    <svg className=\"bi bi-check-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n        <path fill-rule=\"evenodd\"\n              d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\n    </svg>);\n\nfunction Column(props) {\n\n    const [isEditValueOn, setIsEditValueOn] = useState(false);\n    const [itemInput, setItemInput] = useState(props.item_value);\n    //const [priorityInput, setPriorityInput] = useState('');\n\n    const onTaskChange = (e) => {\n        setItemInput(e.target.value);\n    };\n\n    const editOn = () => {\n        setIsEditValueOn(true);\n    };\n\n    const taskReset = () => {\n        setIsEditValueOn(false);\n    };\n\n    const taskSubmit = (e) => {\n        e.preventDefault();\n        console.log(itemInput);\n        //console.log(priorityInput);\n\n        props.change_item(props.id,props.item_key,itemInput);\n\n        taskReset();\n    };\n\n    return (\n        <td className=\"\">\n            {!isEditValueOn &&  props.item_value\n                /*(props.item_key!='address')?\n                    props.item_value :\n                    show_address(props.item_value)*/\n            }\n            {!isEditValueOn &&\n                <span className=\"stepahead btn-outline-info\" onClick={() =>editOn() } >\n                    {icon_edit}\n                </span>\n            }\n\n            {isEditValueOn && (props.item_key!='address') &&\n                <form className=\"addnewitem_style\">\n                    <span className=\"form-group\">\n                        <input type=\"text\" className=\"form-control\"\n                               value={itemInput}\n                               onChange={onTaskChange}/>\n                    </span>\n                    <span  className=\"btn-outline-info \"\n                            onClick={taskSubmit}>{icon_submit}\n                    </span>\n                    <span  className=\"stepahead btn-outline-info\"\n                           onClick={taskReset}>{icon_cancel}\n                    </span>\n                </form>\n            }\n\n            {(props.item_key=='address') && isEditValueOn &&\n                <ItemisAddress id={props.id} address={props.el} taskReset={taskReset} change_item={props.change_item} />\n             }\n        </td>\n    );\n}\n\nexport default Column;","import React, {useState} from 'react';\nimport Column from \"./Column\";\n\nfunction Table(props) {\n\n  return (\n    <div className=\"table-responsive\">\n\n        <table className=\"table table-hover table-bordered\">\n            <thead>\n            <tr className=\"\">\n                {Object.keys(props.users[0]).map(  el =>\n                        <th scope=\"col\">{el}</th>)\n                }\n            </tr>\n            </thead>\n\n            <tbody>\n                {props.users.map(el =>(\n                    <tr className=\"\">\n                        <th scope=\"row\">{el.id}</th>\n                        <Column change_item={props.change_item} id={el.id} item_value={el.name} item_key={\"name\"} />\n                        <Column change_item={props.change_item} id={el.id} item_value={el.username} item_key={\"username\"} />\n                        <Column change_item={props.change_item} id={el.id} item_value={el.email} item_key={\"email\"} />\n\n                        <Column change_item={props.change_item} id={el.id} item_value={el.address[\"street\"]+\" \"+ el.address[\"suite\"]+\" \"+el.address[\"city\"]+\" \"+el.address[\"zipcode\"] } item_key={\"address\"} el={el.address} />\n\n                        <Column change_item={props.change_item} id={el.id} item_value={el.phone} item_key={\"phone\"} />\n                        <Column change_item={props.change_item} id={el.id} item_value={el.website} item_key={\"website\"} />\n                        <Column change_item={props.change_item} id={el.id} item_value={el.company[\"name\"]} item_key={\"company\"} />\n                    </tr>)\n\n                )}\n            </tbody>\n        </table>\n\n    </div>\n  );\n}\n\nexport default Table;\n","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Table from \"./Table\";\n\nfunction App() {\n\n  const [users, setUsers] = useState([])\n\n  const change_item = (id,item_key,newInput,suite,city,zipcode) => {\n      let index=0;\n\n      users.map( (el,i) => {if(el.id==id) index=i} )\n      let newlist = users.map( el=> el )\n\n      if(item_key!=\"address\" && item_key!=\"company\")\n            newlist[index][item_key] = newInput;\n\n      if(item_key==\"address\") {\n          newlist[index][item_key][\"street\"] = newInput;\n          newlist[index][item_key][\"suite\"] = suite;\n          newlist[index][item_key][\"city\"] = city;\n          newlist[index][item_key][\"zipcode\"] = zipcode;\n      }\n\n      if(item_key==\"company\") {\n           newlist[index][item_key][\"name\"] = newInput;\n      }\n\n      setUsers(newlist);\n  }\n\n  const load = () => {\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(json => {\n              setUsers(json);\n              console.log(\"Users loaded from db\");\n            }\n        );\n  };\n\n  return (\n    <div className=\"\">\n       <button className=\"btn btn-outline-info header\" onClick={load}>Load Users</button>\n        <a className=\"stepahead\" href=\"https://github.com/rusbur/apirequestUsers\">github link</a>\n\n\n        <div className=\"tablestyle\">\n        { users[0]==null? \"\" : <Table change_item={change_item} users={users}/>\n        }\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}